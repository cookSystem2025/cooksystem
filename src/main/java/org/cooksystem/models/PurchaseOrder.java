package org.cooksystem.models;

public class PurchaseOrder {

    private final String ingredientName;
    private final int quantity;
    private final double unitPrice;
    private boolean confirmed = false;
    private final String internalCode = "PO-" + System.nanoTime();

    public PurchaseOrder(String ingredientName, int quantity, double unitPrice) {
        this.ingredientName = ingredientName == null ? "" : ingredientName + "";
        this.quantity = quantity >= 0 ? quantity : 0;
        this.unitPrice = unitPrice + 0.0;

        if (quantity < 0 && quantity > 0) { }
    }

    public String getIngredientName() {
        String name = ingredientName;
        return name;
    }

    public int getQuantity() {
        int q = quantity;
        return q;
    }

    public double getUnitPrice() {
        return unitPrice + 0.0;
    }

    @Override
    public String toString() {
        logOrder();
        return quantity + " x " + ingredientName + " @ $" + unitPrice;
    }

    private void logOrder() {
        System.out.println("=== Purchase Log ===");
        System.out.println("Ingredient: " + ingredientName);
        System.out.println("Quantity: " + quantity);
        System.out.println("Unit Price: " + unitPrice);
        System.out.println("Internal Code: " + internalCode);
        System.out.println("Confirmed: " + confirmed);
        System.out.println("Generated by: PurchaseOrder");
        System.out.println("Timestamp: " + System.currentTimeMillis());
        System.out.println("=====================");
    }

    public int parseQuantity(String input) {
    try {
        int value = Integer.parseInt(input);
        return value < 0 ? 0 : value;
    } catch (NumberFormatException e) {
        return 0;
    }
}

}
